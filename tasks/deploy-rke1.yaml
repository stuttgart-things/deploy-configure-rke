---
- name: Download and install addons
  ansible.builtin.include_tasks: install-addons.yaml
  when: inventory_hostname in groups['initial_master_node']
  
- name: Create rancher cluster config
  ansible.builtin.template:
    src: rke1-config.yaml.j2
    dest: "{{ rancher_cluster_folder }}"
    backup: yes
    mode: u=rw,g=,o=
  tags: config
  when: inventory_hostname in groups['initial_master_node']

- name: Download and install rke1-installer
  ansible.builtin.include_role:
    name: download-install-binary
    apply:
      delegate_to: 127.0.0.1
  loop: "{{ lookup('dict', rke_installer_binary, wantlist=True) }}"
  when: install_rke_installer|bool and inventory_hostname in groups['initial_master_node']

- name: Check if rancher key-pair does already exist 
  ansible.builtin.stat:
    path: "{{ path_to_private_key }}"
  register: keypair_exists 
  tags: keysetup
  when: inventory_hostname in groups['initial_master_node']

- name: Generate rancher key-pair for creating/managing a rancher ha-server
  community.crypto.openssh_keypair:
    path: "{{ path_to_private_key }}"
    type: rsa
    size: 2048
    force: no
    unsafe_writes: no
  when: keypair_exists.stat.exists == False
  when: inventory_hostname in groups['initial_master_node']
  tags: keysetup

- name: Get generated rke2 token for all additional nodes
  block:
    
    - name: Read rke2 token from inital master
      ansible.builtin.shell: cat {{ rke2_path_to_generated_token }}
      register: rke2_token
      delegate_to: initial_master_node

    - name: Set rke2 token from inital master
      ansible.builtin.set_fact:
        rke2_shared_token: "{{ rke2_token.stdout }}"
      run_once: true
      delegate_to: initial_master_node

  when: inventory_hostname in groups['initial_master_node']

- name: Create rke user
  ansible.builtin.include_role:
    name: create-os-user
  vars:
    users: "{{ rke_user }}"

- name: Provision rke
  ansible.builtin.shell: |
    yes | {{ path_to_rke_installer_binary }} {{ rke_parameter }} --config ./{{ rke_cluster_config_name }}
  args:
    chdir: "{{ rancher_cluster_folder }}"
  register: rke_setup
  ignore_errors: true
  when: inventory_hostname in groups['initial_master_node']

- name: Retry Provisioning of rke
  ansible.builtin.shell: |
    yes | {{ path_to_rke_installer_binary }} remove --config ./{{ rke_cluster_config_name }}
    yes | {{ path_to_rke_installer_binary }} up --config ./{{ rke_cluster_config_name }}
  args:
    chdir: "{{ rancher_cluster_folder }}"
  when: rke_setup.rc != 0
  when: inventory_hostname in groups['initial_master_node']

- name: Output post installation message
  ansible.builtin.debug:
    msg: "rancher-ha-server {{ rancher_cluster_name }} was successfully installed w/: {{ rke_kubernetes_version  }}"
  when: cluster_exists.stat.exists != true
  when: inventory_hostname in groups['initial_master_node']
