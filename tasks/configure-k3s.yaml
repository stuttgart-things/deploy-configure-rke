---
- name: Install cilium
  block:
    - name: Create cilium config
      ansible.builtin.template:
        src: cilium-config.yaml.j2
        dest: "{{ k3s_config_dir }}/{{ cilium_config }}"
      tags: cilium_config

    - name: Install cilium
      ansible.builtin.shell: |
        cilium install \
          --set k8sServiceHost={{ cilium_api_server_ip }} \
          --set k8sServicePort={{ cilium_api_server_port }} \
          --set kubeProxyReplacement={{ cilium_kube_proxy_replacement }} \
          --helm-set=operator.replicas={{ cilium_operator_replicas }}
        cilium status --wait
        cilium upgrade -f {{ k3s_config_dir }}/{{ cilium_config }}
        cilium status --wait
      environment:
        KUBECONFIG: "{{ k3s_kubeconfig_path }}"

  when: install_cilium|bool and inventory_hostname in groups['initial_master_node']

- name: Create (testing) root certificate
  block:
    - name: Generate self-signed certificate
      ansible.builtin.shell: |
        openssl genrsa -out {{ root_ca_key }} 2048
        openssl req -x509 -new -nodes -key {{ root_ca_key }} \
        -days 3650 -sha256 -out {{ root_ca }} -subj "{{ root_cert_subject }}"
        cp {{ root_ca }} {{ os_cert_path }}/k3s-ca.crt
        update-ca-certificates

    - name: Create cert-manager namespace and secret
      ansible.builtin.shell: |
        kubectl create ns cert-manager || true
        kubectl create secret tls -n cert-manager root-ca \
        --cert={{ root_ca }} --key={{ root_ca_key }} || true
      environment:
        KUBECONFIG: "{{ k3s_kubeconfig_path }}"

  when: create_root_cert|bool and inventory_hostname in groups['initial_master_node']