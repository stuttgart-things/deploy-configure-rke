---
- name: Create config dir
  ansible.builtin.file:
    path: "{{ rke2_config_dir }}"
    state: directory
    owner: "{{ rke2_user_name }}"
    group: "{{ rke2_user_group }}"
    mode: 0755
  tags: rke2_config

- name: Add proxy details in rke2-server service
  ansible.builtin.copy:
    dest: "{{ rke2_server_service_dir }}/{{ rke2_server_service_env_config }}"
    content: |
      {{ rke2_proxy_config }}
    force: false
  when: rke2_configure_proxy|bool

- name: Create registry config
  ansible.builtin.include_tasks: configure-registries.yaml
  when: rke2_registry_configs is defined

- name: Create config dir
  ansible.builtin.file:
    path: "{{ rke2_additional_manifests_path }}"
    state: directory
    owner: "{{ rke2_user_name }}"
    group: "{{ rke2_user_group }}"
    mode: 0755
  tags: rke2_config

- name: Create helmchart config
  ansible.builtin.template:
    src: "{{ helm_template }}"
    dest: "{{ rke2_additional_manifests_path }}/{{ item.value.name }}.yaml"
  tags: rke2_config
  loop: "{{ lookup('dict', helmChartConfig, wantlist=True) }}"
  when: helmChartConfig is defined and helmChartConfig | length > 0
  loop_control:
    label: "{{ item.key }}"

- name: Create rke2 config
  ansible.builtin.template:
    src: "{{ rke2_config }}"
    dest: "{{ rke2_config_dir }}/config.yaml"
  tags: rke2_config

- name: Configure NetworkManager
  block:

    - name: Create rke2 config
      ansible.builtin.template:
        src: rke2-canal.conf.j2
        dest: "{{ network_manager_config_dir }}/rke2-canal.conf"
      tags: rke2_config

    - name: Restart service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name: NetworkManager
      tags: rke2_config

    - name: Disable service nm-cloud-setup
      ansible.builtin.systemd:
        name: nm-cloud-setup.service
        enabled: no
        state: stopped
      when: ansible_facts.services["nm-cloud-setup.service"] is defined

    - name: Disable nm-cloud-setup.timer unit
      ansible.builtin.systemd:
        name: nm-cloud-setup.timer
        state: stopped
        enabled: no
      when: ansible_facts.services["nm-cloud-setup.service"] is defined

  when: ansible_os_family == 'RedHat'
