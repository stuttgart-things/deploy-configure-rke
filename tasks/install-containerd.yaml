---
- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ containerd_directories }}"

- name: Download and unarchive containerd binaries
  ansible.builtin.unarchive:
    src: "{{ item.value.url }}"
    dest: "{{ item.value.dest }}"
    remote_src: yes
  loop: "{{ lookup('dict', containerd_archives, wantlist=True) }}"

- name: Download additional containerd files
  ansible.builtin.get_url:
    url: "{{ item.value.url  }}"
    dest: "{{ item.value.dest }}"
  loop: "{{ lookup('dict', containerd_downloads, wantlist=True) }}"

- name: Create containerd default config & install runc
  ansible.builtin.shell: |
    containerd config default | tee {{ containerd_config_folder }}/{{ containerd_config_file }}
    install -m 755 {{ runc_bin_dest }}/runc.amd64 {{ runc_bin_dest }}/runc

- name: Set containerd root/data path in "{{ containerd_config_folder }}/{{ containerd_config_file }}"
  ansible.builtin.lineinfile:
    path: "{{ containerd_config_folder }}/{{ containerd_config_file }}"
    regexp: "{{ regexRootPath }}"
    line: "{{ lineRootPath }}"

- name: Replace config values in {{ containerd_config_folder }}/{{ containerd_config_file }}
  ansible.builtin.replace:
    path: "{{ containerd_config_folder }}/{{ containerd_config_file }}"
    regexp: "{{ item.value.regex  }}"
    replace: "{{ item.value.replace  }}"
  loop: "{{ lookup('dict', containerd_config_replacements, wantlist=True) }}"

- name: Add proxy details in containerd service
  ansible.builtin.blockinfile:
    path: "{{ containerd_service_dest }}/{{ containerd_service_name }}"
    insertafter: "KillMode=process"
    block: |
      {{ containerd_proxy_config }} 
  when: rke2_configure_proxy|bool
  
- name: Enable and restart containerd service
  ansible.builtin.systemd:
    state: started
    daemon_reload: true
    enabled: true
    name: containerd

- name: Create rke2 {{ rke2_config_dir }}/{{ rke2_config_file }} for the use of containerd
  ansible.builtin.copy:
    dest: "{{ rke2_config_dir }}/{{ rke2_config_file }}"
    content: |
      container-runtime-endpoint: {{ container_runtime_endpoint }}

- name: Import rke2 images into conatinerd
  block:
  
    - name: Download imagelist for rke2 release
      ansible.builtin.get_url:
        url: "{{ rke2_imagelist_url }}"
        dest: "{{ rke2_config_dir }}/{{ rke2_imagelist }}"

    - name: Template importer script
      ansible.builtin.template:
        src: {{ containerd_importer_script }}
        dest: "{{ rke2_config_dir }}/containerd-importer.sh"

    - name: Download and import images into containerd
      ansible.builtin.shell: |
        sh {{ rke2_config_dir }}/containerd-importer.sh
        
  when: conatinerd_import_rke2images|bool
